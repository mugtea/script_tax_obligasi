<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net" />
    <section name="EngineStatement.Data" type="EngineStatement.Data.Bases.NetTiersServiceSection, EngineStatement.Data" allowDefinition="MachineToApplication" restartOnExternalChanges="true" />
    <section name="SahassaNettier.Data" type="SahassaNettier.Data.Bases.NetTiersServiceSection, SahassaNettier.Data" allowDefinition="MachineToApplication" restartOnExternalChanges="true" />
  </configSections>
  <log4net>
    <appender name="LogFileAppender" type="log4net.Appender.RollingFileAppender">
      <!-- Please make sure the ..\\Logs directory exists! -->
      <param name="File" value="Logs\\EmailAgentServices.log" />
      <!--<param name="AppendToFile" value="true"/>-->
      <rollingStyle value="Date" />
      <datePattern value="yyyy-MM-dd" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value=" [%t] %-5p %c %m%n %newline%d" />
      </layout>
    </appender>
    <logger name="SahassaLog">
      <level value="All" />
      <appender-ref ref="LogFileAppender" />
    </logger>
    <appender name="LogFileAppenderBouncedBack" type="log4net.Appender.RollingFileAppender">
      <!-- Please make sure the ..\\Logs directory exists! -->
      <param name="File" value="Logs\\EmailAgentBouncedBack.log" />
      <!--<param name="AppendToFile" value="true"/>-->
      <rollingStyle value="Date" />
      <datePattern value="yyyy-MM-dd" />
      <layout type="log4net.Layout.PatternLayout">
        <param name="ConversionPattern" value=" [%t] %-5p %c %m%n %newline%d" />
      </layout>
    </appender>
    <logger name="BouncedBackLog">
      <level value="All" />
      <appender-ref ref="LogFileAppenderBouncedBack" />
    </logger>
  </log4net>
  <connectionStrings>
    <!--<add name="Sahassa.eStatement.archivingservices.ConnectionString" connectionString="Initial Catalog=EngineStatement;Data Source=10.25.130.157; User Id = estatement;Password = cimbniaga1!;" />
    <add name="netTiersConnectionString" connectionString="Initial Catalog=EngineStatement;Data Source=10.25.130.157; User Id = estatement;Password = cimbniaga1!;" />-->

    <add name="Sahassa.eStatement.archivingservices.ConnectionString" connectionString="Initial Catalog=EngineStatement_bdi;Data Source=.\sqlserver; User Id =sa;Password = keymaker;" />
    <add name="netTiersConnectionString" connectionString="Initial Catalog=EngineStatement_BDI;Data Source=.\sqlserver; User Id =sa;Password = keymaker;" />
  </connectionStrings>
  <EngineStatement.Data defaultProvider="SqlNetTiersProvider">
    <providers>
      <add name="SqlNetTiersProvider" type="EngineStatement.Data.SqlClient.SqlNetTiersProvider, EngineStatement.Data.SqlClient" connectionStringName="netTiersConnectionString" providerInvariantName="System.Data.SqlClient" entityFactoryType="EngineStatement.Entities.EntityFactory" useEntityFactory="true" enableEntityTracking="false" enableMethodAuthorization="false" useStoredProcedure="false" defaultCommandTimeout="3600" />
    </providers>
  </EngineStatement.Data>
  <SahassaNettier.Data defaultProvider="SqlNetTiersProvider">
    <providers>
      <add name="SqlNetTiersProvider" type="SahassaNettier.Data.SqlClient.SqlNetTiersProvider, SahassaNettier.Data.SqlClient" connectionStringName="netTiersConnectionString" providerInvariantName="System.Data.SqlClient" entityFactoryType="SahassaNettier.Entities.EntityFactory" useEntityFactory="false" enableEntityTracking="false" enableMethodAuthorization="false" useStoredProcedure="true" defaultCommandTimeout="3600" />
    </providers>
  </SahassaNettier.Data>
  <appSettings>
    <add key="LogName" value="archivingservices" />
    <add key="WebServerAddress" value="http://localhost" />
    <add key="MaxEmailToReadFromInbox" value="1000" />
    <add key="SelectCommandTimeOut" value="3600" />
    <add key="MaxProcessThreads" value="20" />
    <add key="MaxOverlapSendScheduleThreads" value="2" />
    <add key="MaxOverlapReadScheduleThreads" value="1" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <add key="UsingCertificate" value="0" />
    <add key="BounceBackLogType" value="2" />
    <add key="SMTPTimeout" value="200" />
    <!--<add key="RegexEmail" value="\b[\d!#$%&amp;'*+./=?_`a-z{|}~^-]+@[\d.a-z-]+\.[a-z]{2,6}\b" />-->
    <add key="RegexEmail" value="\b[\d!#$%&amp;'*+./=?_`a-z{|}~^-]+@[\d!#$%&amp;'*+./=?_`a-z{|}~^-]+\.[\d!#$%&amp;'*+./=?_`a-z0-9{|}~^-]{1,30}\b" />
  </appSettings>
  <system.diagnostics>
    <sources>
      <!-- This section defines the logging configuration for My.Application.Log -->
      <source name="DefaultSource" switchName="DefaultSwitch">
        <listeners>
          <add name="FileLog" />
          <!-- Uncomment the below section to write to the Application Event Log -->
          <!--<add name="EventLog"/>-->
        </listeners>
      </source>
    </sources>
    <switches>
      <add name="DefaultSwitch" value="Information" />
    </switches>
    <sharedListeners>
      <add name="FileLog" type="Microsoft.VisualBasic.Logging.FileLogTraceListener, Microsoft.VisualBasic, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL" initializeData="FileLogWriter" />
      <!-- Uncomment the below section and replace APPLICATION_NAME with the name of your application to write to the Application Event Log -->
      <!--<add name="EventLog" type="System.Diagnostics.EventLogTraceListener" initializeData="APPLICATION_NAME"/> -->
    </sharedListeners>
  </system.diagnostics>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <system.web>
    <membership defaultProvider="ClientAuthenticationMembershipProvider">
      <providers>
        <add name="ClientAuthenticationMembershipProvider" type="System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" />
      </providers>
    </membership>
    <roleManager defaultProvider="ClientRoleProvider" enabled="true">
      <providers>
        <add name="ClientRoleProvider" type="System.Web.ClientServices.Providers.ClientRoleProvider, System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" serviceUri="" cacheTimeout="86400" />
      </providers>
    </roleManager>
  </system.web>
</configuration>