 CREATE  OR ALTER   PROCEDURE [dbo].[TaxCustomerDeductedAdvice_OBS_CASATD_CustomerInformation_Insert] AS BEGIN IF EXISTS (      
   SELECT      
     TOP 1 *      
   FROM      
     TaxCustomerDeductedAdvice_OBS_History WITH (NOLOCK)      
 ) BEGIN      
 TRUNCATE TABLE TaxCustomerDeductedAdvice_OBS_CASATD_CustomerInformation    
 INSERT INTO      
   TaxCustomerDeductedAdvice_OBS_CASATD_CustomerInformation (      
     cif,      
     customer_name,      
     account_no,      
     branch_code,      
     postal_code,  
  FK_TaxRequestList,
  DATE_BIRTH
   )      
 SELECT DISTINCT      
   E.cif,      
   E.customer_name,      
   '' account_no,      
   '' branch_code,      
   TRL.id postal_code,  
   TRL.id as FK_TaxRequestList                  , case when (select top 1 DATE_BIRTH from TaxCustomerDeductedAdvice_OBS_History  WITH (NOLOCK)   where cif = e.cif and date_birth is not null) is null then '000000' else (select top 1 DATE_BIRTH from TaxCustomerDeductedAdvice_OBS_History  WITH (NOLOCK)   where cif = e.cif and date_birth is not null) end
 FROM      
   TaxCustomerDeductedAdvice_OBS_History e     WITH (NOLOCK)    
   INNER JOIN TaxRequestList TRL  WITH (NOLOCK)   ON TRL.CIF=E.cif  
   INNER JOIN TaxCustomerDeductedAdvice_OBS_Summary CSR  WITH (NOLOCK)   ON CSR.fk_taxrequestlist = TRL.id and e.account_no = csr.ACCOUNT_NO  
 WHERE trl.[status] = 'waiting' and CSR.product_category NOT LIKE '%syariah%'    
 AND       
   NOT EXISTS (      
     SELECT      
       NULL      
     FROM      
       TaxCustomerDeductedAdvice_OBS_CASATD_CustomerInformation d       WITH (NOLOCK)  
     WHERE      
       d.cif=e.cif      
       AND d.account_no=e.account_no      
    AND trl.[Status] = 'waiting'      
   )  
   END  
   END
 GO
 
